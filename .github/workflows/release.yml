# This workflow will build a Java project with Ant
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-ant

name: OpenJVerein official release

on: workflow_dispatch

jobs:
  call-reusable-workflow:
    uses: ./.github/workflows/reusable-build.yml

  release:
    needs: call-reusable-workflow
    runs-on: ubuntu-latest
    steps:
    - name: Set up JDK for x64
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        architecture: x64

    - name: Checkout openjverein
      uses: actions/checkout@v4
      with:
        path: jverein

    - name: Restore build dependencies
      id: restore-cache
      uses: actions/cache/restore@v4
      with:
        path: |
          jameica/bin/
          jameica/lib/
          jameica/releases/jameica-lib.jar
          hibiscus/bin/
          hibiscus/lib/
          hibiscus/releases/hibiscus-lib.jar
        fail-on-cache-miss: true
        key: ${{ hashFiles('jverein/build/build.properties', 'jverein/build/build.xml') }}

    - name: Build openjverein plugin
      id: openjverein
      run: |
        ant_output=$(ant -e -q -noinput -buildfile jverein/build/build.xml)
        echo ${ant_output}

        ssa="SELECTED_VERSION="
        ssb=".zip"
        text="${ant_output#*${ssa}}"
        text="${text%${ssb}*}.zip"
        tmp_version=$(echo $text | sed -rn 's/^([^[:blank:]]*).*$/\1/p')
        tmp_version=$tmp_version

        ssa="SELECTED_FILENAME="
        text="${ant_output#*${ssa}}"
        text="${text%${ssb}*}.zip"
        tmp_filename=$(echo $text | sed -rn 's/^([^[:blank:]]*).*$/\1/p')

        ssa="SELECTED_PATH="
        text="${ant_output#*${ssa}}"
        text="${text%${ssb}*}.zip"
        tmp_path=$(echo $text | sed -rn 's/^([^[:blank:]]*).*$/\1/p')

        echo "selected_version=${tmp_version}" >> $GITHUB_OUTPUT
        echo "selected_filename=${tmp_filename}" >> $GITHUB_OUTPUT
        echo "selected_path=${tmp_path}" >> $GITHUB_OUTPUT

        builddatetime=$(date +'%Y-%m-%d %H:%M')
        echo "### Version: ${tmp_version} | filename: ${tmp_filename} | build datetime: ${builddatetime}" >> $GITHUB_STEP_SUMMARY

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.openjverein.outputs.selected_version }}
        prerelease: false
        name: Release ${{ steps.openjverein.outputs.selected_version }}
        files: ./jverein/${{ steps.openjverein.outputs.selected_path }}
        generate_release_notes: true
